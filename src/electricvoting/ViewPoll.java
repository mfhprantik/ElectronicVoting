/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package electricvoting;

import java.awt.Color;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import javax.swing.ButtonGroup;
import javax.swing.JRadioButton;

/**
 *
 * @author Prantik
 */
public class ViewPoll extends javax.swing.JFrame {

    JRadioButton[] ops;
    Poll p;

    /**
     * Creates new form ViewPoll
     */
    private ViewPoll() {
    }

    public ViewPoll(Poll p) {
        initComponents();
        setLocationRelativeTo(null);

        this.p = p;
        if (p.getCreator().equals(Dashboard.email)) {
            delete.setVisible(true);
        } else {
            delete.setVisible(false);
        }

        if (p.isCanAdd()) {
            add.setVisible(true);
        } else {
            add.setVisible(false);
        }

        boolean voted = voted();
        if (!p.isEditable() && voted) {
            vote.setEnabled(false);
        }
        if (!voted || (p.isStatsHidden() && !p.getCreator().equals(Dashboard.email))) {
            stats.setEnabled(false);
        }

        loadPoll();
    }

    private void loadPoll() {
        SQL.getPoll(p);

        if (p.getTitle().length() > 27) {
            title1.setText(p.getTitle().substring(0, 27));
            title2.setText(p.getTitle().substring(27));
        } else {
            title2.setText(p.getTitle());
        }

        ops = new JRadioButton[p.getOptions().size()];
        ButtonGroup bg = new ButtonGroup();

        for (int j = 0; j < p.getOptions().size(); j++) {
            Option o = p.getOptions().get(j);
            ops[j] = new JRadioButton(o.getName());

            if (o.isVoted()) {
                ops[j].setSelected(true);
            }

            ops[j].setFont(options.getFont());
            ops[j].setForeground(Color.WHITE);
            ops[j].setBounds(10, 10, 200, 40);

            if (!p.isMultiple()) {
                bg.add(ops[j]);
            }
            options.add(ops[j]);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        vote = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        title1 = new javax.swing.JLabel();
        title2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        options = new javax.swing.JPanel();
        delete = new javax.swing.JButton();
        copy = new javax.swing.JButton();
        stats = new javax.swing.JButton();
        add = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Electronic Voting System - View Poll");
        setUndecorated(true);
        setOpacity(0.95F);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(36, 47, 85));
        jPanel1.setForeground(new java.awt.Color(36, 47, 85));
        jPanel1.setMaximumSize(new java.awt.Dimension(600, 800));
        jPanel1.setMinimumSize(new java.awt.Dimension(600, 800));
        jPanel1.setPreferredSize(new java.awt.Dimension(600, 800));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        vote.setBackground(new java.awt.Color(36, 47, 85));
        vote.setFont(new java.awt.Font("Roboto Thin", 0, 24)); // NOI18N
        vote.setForeground(new java.awt.Color(255, 255, 255));
        vote.setText("Vote");
        vote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voteActionPerformed(evt);
            }
        });
        jPanel1.add(vote, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 500, 510, -1));

        cancel.setBackground(new java.awt.Color(36, 47, 85));
        cancel.setFont(new java.awt.Font("Roboto Thin", 0, 24)); // NOI18N
        cancel.setForeground(new java.awt.Color(255, 255, 255));
        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });
        jPanel1.add(cancel, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 680, 256, -1));

        title1.setBackground(new java.awt.Color(36, 47, 85));
        title1.setFont(new java.awt.Font("Roboto Thin", 1, 30)); // NOI18N
        title1.setForeground(new java.awt.Color(255, 255, 255));
        title1.setToolTipText("");
        title1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel1.add(title1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 511, 52));

        title2.setBackground(new java.awt.Color(36, 47, 85));
        title2.setFont(new java.awt.Font("Roboto Thin", 1, 30)); // NOI18N
        title2.setForeground(new java.awt.Color(255, 255, 255));
        title2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jPanel1.add(title2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, 511, 52));

        jScrollPane1.setBackground(new java.awt.Color(0, 151, 167));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setForeground(new java.awt.Color(0, 151, 167));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        options.setBackground(new java.awt.Color(36, 47, 85));
        options.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        options.setForeground(new java.awt.Color(255, 255, 255));
        options.setFont(new java.awt.Font("Roboto Thin", 0, 30)); // NOI18N
        options.setInheritsPopupMenu(true);
        options.setLayout(new javax.swing.BoxLayout(options, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(options);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 511, 280));

        delete.setBackground(new java.awt.Color(36, 47, 85));
        delete.setFont(new java.awt.Font("Roboto Thin", 0, 24)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel1.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 680, 249, -1));

        copy.setBackground(new java.awt.Color(36, 47, 85));
        copy.setFont(new java.awt.Font("Roboto Thin", 0, 24)); // NOI18N
        copy.setForeground(new java.awt.Color(255, 255, 255));
        copy.setText("Copy ID");
        copy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyActionPerformed(evt);
            }
        });
        jPanel1.add(copy, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 630, 256, -1));

        stats.setBackground(new java.awt.Color(36, 47, 85));
        stats.setFont(new java.awt.Font("Roboto Thin", 0, 24)); // NOI18N
        stats.setForeground(new java.awt.Color(255, 255, 255));
        stats.setText("Stats");
        stats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statsActionPerformed(evt);
            }
        });
        jPanel1.add(stats, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 630, 250, -1));

        add.setBackground(new java.awt.Color(36, 47, 85));
        add.setFont(new java.awt.Font("Roboto Thin", 0, 24)); // NOI18N
        add.setForeground(new java.awt.Color(255, 255, 255));
        add.setText("Add Option");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jPanel1.add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 580, 510, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void voteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voteActionPerformed
        vote.setEnabled(false);
        SQL.vote(this, ops, p);

        if (voted() && !stats.isEnabled()) {
            if (!p.isStatsHidden()) {
                stats.setEnabled(false);
            }
        }
        vote.setEnabled(true);
    }//GEN-LAST:event_voteActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        new Dashboard().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_cancelActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        delete.setEnabled(false);
        SQL.deletePoll(this, p, getOptions());
        delete.setEnabled(true);
    }//GEN-LAST:event_deleteActionPerformed

    private void copyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyActionPerformed
        Clipboard clip = Toolkit.getDefaultToolkit().getSystemClipboard();
        Transferable tText = new StringSelection("" + p.getId());
        clip.setContents(tText, null);
    }//GEN-LAST:event_copyActionPerformed

    private void statsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statsActionPerformed
        stats.setEnabled(false);

        int totalVotes = 0;
        for (int i = 0; i < p.getOptions().size(); i++) {
            totalVotes += p.getOptions().get(i).getVotes();
        }

        for (int i = 0; i < ops.length; i++) {
            ops[i].setText(ops[i].getText() + " (" + p.getOptions().get(i).getVotePercentage(totalVotes) + "%)");
        }
    }//GEN-LAST:event_statsActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        add.setEnabled(false);
        AddOption.p = p;
        new AddOption().setVisible(true);
        this.setVisible(false);
        add.setEnabled(true);
    }//GEN-LAST:event_addActionPerformed

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        lastX = evt.getXOnScreen();
        lastY = evt.getYOnScreen();
    }//GEN-LAST:event_formMousePressed

    int lastX, lastY;

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        setLocation(getLocationOnScreen().x + x - lastX, getLocationOnScreen().y + y - lastY);
        lastX = x;
        lastY = y;
    }//GEN-LAST:event_formMouseDragged

    private String getOptions() {
        String options = "";

        for (int i = 0; i < p.getOptions().size(); i++) {
            if (i == 0) {
                options = "oid = " + p.getOptions().get(i).getId();
            } else {
                options += " or oid = " + p.getOptions().get(i).getId();
            }
        }

        if (options.length() == 0) {
            return "0";
        } else {
            return options;
        }
    }

    private boolean voted() {
        boolean voted = false;
        for (int i = 0; i < p.getOptions().size(); i++) {
            if (p.getOptions().get(i).isVoted()) {
                voted = true;
                break;
            }
        }

        return voted;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewPoll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewPoll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewPoll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewPoll.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewPoll().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton cancel;
    private javax.swing.JButton copy;
    private javax.swing.JButton delete;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel options;
    private javax.swing.JButton stats;
    private javax.swing.JLabel title1;
    private javax.swing.JLabel title2;
    private javax.swing.JButton vote;
    // End of variables declaration//GEN-END:variables
}
